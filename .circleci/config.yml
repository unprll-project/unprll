commands:
    get_tag:
        description: "Get tag from current commit"
        steps:
            - run: |
                echo 'export VERSION="$(git tag -l --points-at HEAD)"' >> $BASH_ENV
    update:
        description: "Update APT index"
        steps:
            - run: apt update
    install_deps:
        description: "Install Dependencies"
        parameters:
            extra:
                description: "Extra Packages"
                type: string
                default: ""
        steps:
            - run: >
                apt install -y
                ca-certificates
                build-essential
                cmake
                pkg-config
                libtool
                automake
                git
                curl
                gperf
                << parameters.extra >>
    build_toolchain:
        description: "Build depends Toolchain"
        parameters:
            version:
                description: "OS Version"
                type: string
        steps:
            - restore_cache:
                key: deps-<< parameters.version >>-{{ checksum "contrib/depends/packages/packages.mk" }}
            - run: make toolchain-<< parameters.version >>
            - save_cache:
                key: deps-<< parameters.version >>-{{ checksum "contrib/depends/packages/packages.mk" }}
                paths:
                    - "contrib/depends"
    initialize_submodules:
        description: "Initialize Submodules"
        steps:
            - run: git submodule init && git submodule update
    package_xz:
        description: "Package Binaries (xz)"
        parameters:
            version:
                description: "OS Version"
                type: string
        steps:
            - run: |
                mkdir -p workspace
                cd build/<< parameters.version >>/$CIRCLE_BRANCH/release/bin
                tar cvJf unprll-$VERSION-<< parameters.version >>.tar.xz *
                mv unprll-$VERSION-<< parameters.version >>.tar.xz ../../../../../workspace
            - persist_to_workspace:
                root: workspace
                paths:
                    - "*.tar.xz"
            - store_artifacts:
                path: workspace
                destination: << parameters.version >>
    package_zip:
        description: "Package Binaries (zip)"
        parameters:
            version:
                description: "OS Version"
                type: string
        steps:
            - run: |
                mkdir -p workspace
                zip -j unprll-$VERSION-<< parameters.version >>.zip build/<< parameters.version >>/$CIRCLE_BRANCH/release/bin/*
                mv unprll-$VERSION-<< parameters.version >>.zip workspace
            - persist_to_workspace:
                root: workspace
                paths:
                    - "*.zip"
            - store_artifacts:
                path: workspace
                destination: << parameters.version >>

executors:
    builder:
        docker:
            - image: ubuntu:16.04

version: 2.1
jobs:
    build_linux_x86_64:
        executor: builder
        steps:
            - update
            - install_deps
            - checkout
            - initialize_submodules
            - get_tag
            - build_toolchain:
                version: linux-x86_64
            - run:
                name: Build
                command: make release-static-linux-x86_64
            - package_xz:
                version: linux-x86_64
    build_windows_x86_64:
        executor: builder
        steps:
            - update
            - install_deps:
                extra: mingw-w64 zip
            - checkout
            - initialize_submodules
            - get_tag
            - build_toolchain:
                version: windows-x86_64
            - run:
                name: Build
                command: make release-static-win64
            - package_zip:
                version: windows-x86_64
    build_linux_armv8:
        executor: builder
        steps:
            - update
            - install_deps:
                extra: gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
            - checkout
            - initialize_submodules
            - get_tag
            - build_toolchain:
                version: linux-armv8
            - run:
                name: Build
                command: make release-static-linux-armv8
            - package_xz:
                version: linux-armv8
    deploy:
        docker:
            - image: cibuilds/github:0.10
        steps:
            - attach_workspace:
                at: /tmp/artifacts
            - run: >
                ghr -draft
                -t ${GITHUB_TOKEN}
                -u ${CIRCLE_PROJECT_USERNAME}
                -r ${CIRCLE_PROJECT_REPONAME}
                -c ${CIRCLE_SHA1}
                -b "$(sha256sum *)"
                $(ls /tmp/artifacts | head -n1 | awk '{split($0,a,"-"); print a[2]}') /tmp/artifacts/

workflows:
    version: 2
    commit:
        jobs:
            - build_linux_x86_64:
                filters:
                    branches:
                        only: /.+-v[0-9]\.[0-9]/
            - build_linux_armv8:
                filters:
                    branches:
                        only: /.+-v[0-9]\.[0-9]/
            - build_windows_x86_64:
                filters:
                    branches:
                        only: /.+-v[0-9]\.[0-9]/
            - hold:
                type: approval
                requires:
                    - build_linux_x86_64
                    - build_linux_armv8
                    - build_windows_x86_64
            - deploy:
                requires:
                    - hold
